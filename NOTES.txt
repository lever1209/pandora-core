
***********list of things the mod actually does so far**************

before reading this list please find the config files you are concerned with and follow along with them

client:
config file
f7 through f10 debug menu
cave fog effects (disabled by default, enable in config)
client mode config
config screen (empty)
debug screen
modmenu integration to open the mod settings screen from within mod menu
world chunk fog becomes darker as the sun sets and depending on the moon size
darkness overlays on blocks are now pitch black (you cant see the blocks with max gamma anymore, although that is not the only reason this exists)

common:
config file
debug config file (not created by default, if you wish to use debug configs you have to copy it out from inside the jar)
default block light levels are replaced 
if the world is infested you will take damage in the dark
depending on the difficulty you will get some tutorial messages before being attacked
items can be eaten but its disabled by default (check config)
hardcore has its own difficulty settings outside of the usual ones
non players have a 90% (by default) chance of not being attacked
entities on fire will not be attacked by grues
entities touching water (not rain) will not be attacked by grues (this is configurable)
entities with night vision will not be attacked (this will be configurable eventually once i figure out how to filter potion effects by id)
if the entity position is inside a block it will be shifted up a single block, this is a patch for soul sand
if the entity is suffocating it will not be attacked by grues (this would be unfair)
if the entities light level is equal to or above the safe light level, grues will not attack
if the entities light level is equal to or above the fade light level, grues have a 60% chance (by default) of not being attacked
if the entity does not have a block in a 3x3x5 centered grid below their feet, they will not be attacked (grues cannot fly, but some entities can)
if the entity is holding a grue ward, there is a chance it will not attack (fully configurable, check config)
there is a debug setting to override the random chance values used here, and disable grue wards
there is a cooldown tracker per dimension that clears out invalid entries (death, removed, moved to another dimension, etc) every time it ticks
if the entity is a player, and they have a tutorial, and it has been longer than (configurable time) after the last tutorial or it is their first tutorial, it will spend a tutorial and send a message in chat warning about grues, adding additional (configurable) grace time to the cooldown tracker
damage to the entity is configurable
adds a grue escape goal to entities (configurable)
adds a flint and steel item (it is outdated and cannot light candles, it is meant to light soul fires anywhere)
adds a debug stick item that prints out block states
adds a grue damage source
when the worlds difficulty gets updated through normal means (MinecraftServer#setDifficulty) it will refresh all players tutorial counts according to the new difficulty and set last tutorial times to 0
saves custom nbt data inside player entries in the world files to store their total tutorial count left, the last tutorial usage time, and whether it should skip the time check on the next tutorial (used to check if its the first tutorial or not)

server
config file (empty)

***********end of list**************

should hardcore mode be intentionally unfair? if its tailored to how *you* like it, its already plenty unfair

wrapper block to contain all perishable light blocks and run custom things on em
 ^^ make that a library? at the very least include an api to add custom logic on it

nbt tags for literally everything as read only, for entity specific overrides such as adventure maps or the like

protective gear for dogs and horses

suggestions: trade for ink sacs to emeralds

amethyst glow squids phantom membrane conduit

add button on worlds menu to recalculate all blocks lighting, potentially dangerous with non vanilla, so throw up a warning, this "solves" the lighting artifacts when changing lighting values without needing too much cpu power in game, should only be used when editing these values or when converting world to pandora since all lighting values are cached
create a utility to load all chunks within a world, update all block luminance values with the ones stored in configs

hip lantern?

light enchantment? glowstone ash and ghast tear paste to become an armor trim instead?

torches burn out and can only be relit twice, after that they turn to ash

ash

glowing armor trim

refil lanterns with phantom membrane, and have 3x slower burn rate

glowstone paste of some kind to augment equipment with light, vanishes on repair and grindstone

render a grue face just out of lantern light range staring at the camera, with the lantern just inside view to the left for the mod icon

option to use entity vs nothing per dimension in config

setup gamerules for select config options

fade light level

particle eyeball monster that lurks in the darkness, multiple floating eye segments? eye stalks?

spawn a light generating whisp when respawning, it lasts 2 minutes and follows the player, or until the player enters the light

so, i just make a block entity, make it extend the block its replacing, and
slip that into the original registry call?

effectively, but you have to redirect the original call (or wrap it) since if
it calls the original constructor, an intrusive holder is created
